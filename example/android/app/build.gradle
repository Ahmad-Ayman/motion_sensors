plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader) }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in local.properties.")
}

def flutterVersionCode = (localProperties.getProperty('flutter.versionCode') ?: '1').toInteger()
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

android {
    // Use a valid installed SDK. 34 is safest on most machines.
    compileSdkVersion 34

    namespace "finaldev.motion_sensors_example"

    defaultConfig {
        applicationId "finaldev.motion_sensors_example"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 34
        versionCode flutterVersionCode
        versionName flutterVersionName
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
            minifyEnabled false
        }
    }

    lint {
        disable += ['InvalidPackage']
        abortOnError false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

// Still needed to point the Flutter Gradle plugin to the parent (plugin root)
flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
}
